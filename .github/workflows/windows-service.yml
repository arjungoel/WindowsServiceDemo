name: Deploying a CI/CD for Windows Service using GitHub Actions and upload the executable file in Amazon S3

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
  EXECUTABLE_PATH_RUNNER: ${{ secrets.EXECUTABLE_PATH_RUNNER }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  EC2_LOCATION: ${{ secrets.EC2_LOCATION }}

jobs:

    build:
      runs-on: windows-latest
      defaults:
        run:
          shell: cmd
      steps:
        - name: Checkout code repository
          uses: actions/checkout@v3

        - name: Setup MSBuild
          uses: microsoft/setup-msbuild@v1

        - name: Setup NuGet
          uses: NuGet/setup-nuget@v1.0.5

        - name: Restore Packages
          run: nuget restore WindowsServiceDemo.sln

        - name: Build solution
          run: msbuild WindowsServiceDemo.sln /p:Configuration=Release /p:DeployOnBuild=true
      
        - name: Set AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Upload the windows service executable (.exe) file to S3 bucket
          shell: powershell
          env:
            EXECUTABLE_PATH: ${{ secrets.EXECUTABLE_PATH }}
          run: |
            aws s3 cp ${{ env.EXECUTABLE_PATH }} s3://${{ env.S3_BUCKET_NAME }}/windows-service-app/
     
    deploy:
      needs: build
      runs-on: [ self-hosted, Windows, X64 ]
      defaults:
        run:
         shell: cmd
      steps:
       - name: Set AWS credentials
         uses: aws-actions/configure-aws-credentials@v1
         with:
           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           aws-region: ${{ secrets.AWS_REGION }}
           
       - name: To check Windows Service existence (exists or not)
         shell: powershell
         run: |
           $service = Get-Service -Name ${{ env.SERVICE_NAME }}
           if ($service -ne $null) {
             echo "Service exist"
             Stop-Service -Name ${{ env.SERVICE_NAME }} -ErrorAction SilentlyContinue
             cd C:\Windows\System32
             C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe -u ${{ env.EXECUTABLE_PATH_RUNNER }}
             $id = Get-WmiObject -Class Win32_Service -Filter 'Name LIKE ${{ env.SERVICE_NAME }}' | Select-Object -ExpandProperty ProcessId
             if ($id -ne $null) {
               $process = Get-Process -Id $id
               if ($process -ne $null) {
                 Start-Process powershell -ArgumentList "Stop-Process -Id $process.Id -Force" -Verb RunAs
              }
           }
           }
    
       - name: Download the Windows Service Executable (.exe) file from S3 bucket to EC2 instance location
         shell: powershell
         env:
           EC2_LOCATION: ${{ secrets.EC2_LOCATION }}
         run: C:\"Program Files"\Amazon\AWSCLIV2\aws s3 cp s3://${{ env.S3_BUCKET_NAME }}/windows-service-app/WindowsServiceDemo.exe ${{ env.EC2_LOCATION }}
      
       - name: Install the service
         shell: powershell
         run: |
           cd C:\Windows\System32
           C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe ${{ env.EXECUTABLE_PATH_RUNNER }}
           Start-Service -Name ${{ env.SERVICE_NAME }}
