name: "Deploying a CI/CD for Windows Service using GitHub Actions and upload the executable file in Amazon S3"

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
     build:

             runs-on: windows-latest
             defaults:
               run:
                 shell: cmd

             steps:
             - name: Checkout code repository
               uses: actions/checkout@v3
      
             - name: Setup MSBuild
               uses: microsoft/setup-msbuild@v1

             - name: Setup NuGet
               uses: NuGet/setup-nuget@v1.0.5

             - name: Restore Packages
               run: nuget restore WindowsServiceDemo.sln

             - name: Build solution
               run: msbuild WindowsServiceDemo.sln /p:Configuration=Release /p:DeployOnBuild=true
            
             - name: Set AWS credentials
               uses: aws-actions/configure-aws-credentials@v1
               with:
                 aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                 aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                 aws-region: ${{ secrets.AWS_REGION }}

             - name: Upload the files from bin folder to S3 bucket
               run: |
                 $output = git rev-parse --short=4 HEAD
                 aws s3 cp D:\a\WindowsServiceDemo\WindowsServiceDemo\WindowsServiceDemo\bin\Release\WindowsServiceDemo.exe s3://dotnet-cicd-bucket/
                 aws s3 mv s3://dotnet-cicd-bucket/WindowsServiceDemo.exe "s3://dotnet-cicd-bucket/$output-WindowsServiceDemo.exe"

     # deploy:
     #    needs: build
     #    runs-on: [ self-hosted, Windows, X64 ]
     #    defaults:
     #      run:
     #        shell: cmd
    
     #    steps:
    
     #      - name: Set AWS credentials
     #        uses: aws-actions/configure-aws-credentials@v1
     #        with:
     #          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
     #          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     #          aws-region: ${{ secrets.AWS_REGION }}

     #      - name: To check if service exists or not
     #        shell: powershell
     #        run: |
     #          $service = Get-Service -Name Service1 -ErrorAction SilentlyContinue
     #          if ($service -ne $null) {
     #            echo "Service exist"
     #            Stop-Service -Name "Service1"
     #            cd C:\Windows\System32
     #            C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe -u "C:\actions-runner\_work\*WindowsServiceDemo.exe"
     #          } 
          
     #      - name: Download the zip file from S3 to EC2 folder
     #        shell: powershell
     #        run: C:\"Program Files"\Amazon\AWSCLIV2\aws s3 cp s3://dotnet-cicd-bucket/*WindowsServiceDemo.exe C:\actions-runner\_work


     #      - name: Install the service
     #        shell: powershell
     #        run: |
     #          cd C:\Windows\System32
     #          C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe "C:\actions-runner\_work\*WindowsServiceDemo.exe"
     #          Start-Service -Name "Service1"
