name: "Deploying a CI/CD for Windows Service using GitHub Actions"

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
    # build:

    #        runs-on: windows-latest
    #        defaults:
    #          run:
    #            shell: cmd

    #        steps:
    #        - name: Checkout code repository
    #          uses: actions/checkout@v3
      
    #        - name: Setup MSBuild
    #          uses: microsoft/setup-msbuild@v1

    #        - name: Setup NuGet
    #          uses: NuGet/setup-nuget@v1.0.5

    #        - name: Restore Packages
    #          run: nuget restore WindowsServiceDemo.sln

    #        - name: Build solution
    #          run: msbuild WindowsServiceDemo.sln /p:Configuration=Release /p:DeployOnBuild=true
            
    #        - name: Set AWS credentials
    #          uses: aws-actions/configure-aws-credentials@v1
    #          with:
    #            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
    #            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #            aws-region: ${{ secrets.AWS_REGION }}

    #        - name: Upload the files from bin folder to S3 bucket
    #          run: |
    #            aws s3 cp D:\a\WindowsServiceDemo\WindowsServiceDemo\WindowsServiceDemo\bin\Release\WindowsServiceDemo.exe s3://dotnet-cicd-bucket/

    deploy:
      # needs: build
      runs-on: [ self-hosted, Windows, X64 ]
      defaults:
        run:
          shell: cmd
    
      steps:
    
        - name: Set AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
            
        # - name: To check service existence 
        #   shell: cmd
        #   run: |
        #     cd C:\Windows\System32 && sc query "Service1" state=all


        - name: To check if service exists or not
          shell: powershell
          run: |
            $service = Get-Service -Name Service1 -ErrorAction SilentlyContinue
            if ($service -eq $null) {
              echo "Service doesn't exist"
              cd C:\Windows\System32
              C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe "C:\actions-runner\_work\WindowsServiceDemo.exe"
            } else {
              echo "Service does exist"
              cd C:\Windows\System32
              C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe -u "C:\actions-runner\_work\WindowsServiceDemo.exe"
              cd C:\Windows\System32
              C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe "C:\actions-runner\_work\WindowsServiceDemo.exe"
            }

        # - name: Check service status
        #   shell: powershell
        #   run: |
        #     $serviceName = "Service1"
        #     # Check the service status
        #     $service = Get-Service -Name $serviceName -ErrorAction SilentlyContinue
            
        #     if ($service -eq $null) {
        #         Write-Host "Service $serviceName not found."
        #     } elseif ($service.Status -eq 'Running') {
        #         Write-Host "Service $serviceName is already running."
        #     } elseif ($service.Status -eq 'Stopped') {
        #         Write-Host "Service $serviceName is stopped. Starting it..."
                
        #         # Start the service
        #         Start-Service -Name $serviceName
            
        #         # Check the service status again
        #         $service = Get-Service -Name $serviceName
        #         if ($service.Status -eq 'Running') {
        #             Write-Host "Service $serviceName has been started successfully."
        #         } else {
        #             Write-Host "Failed to start service $serviceName."
        #         }
        #     } else {
        #         Write-Host "Service $serviceName is in an unexpected state: $($service.Status)"
        #     }
       
        # - name: Run Command Prompt as Administrator and change directory to .NET Framework
        #   shell: cmd
        #   run: |
        #     cd C:\Windows\System32 && C:\Windows\Microsoft.NET\Framework\v4.0.30319\InstallUtil.exe "C:\actions-runner\_work\WindowsServiceDemo.exe"
           
        # - name: Start the service
        #   shell: cmd
        #   run: |
        #     cd C:\Windows\System32 && sc start "Service1"
          
        # - name: Check service status
        #   shell: cmd
        #   run: |
        #     cd C:\Windows\System32 && sc query "Service1"

        # - name: Stop the service
        #   shell: cmd
        #   run: |
        #     cd C:\Windows\System32 && sc stop "Service1"
          
